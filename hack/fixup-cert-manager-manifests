#!/usr/bin/env python3
"""
Manipulate the upstream cert-manager yaml manifests so that they are more
compatible with OLM.

* Reduces the combined size of CRDs to <1MiB (the size limit of a configmap)
  This is a work around for https://github.com/operator-framework/operator-lifecycle-manager/issues/1523
  Adapted from
  https://raw.githubusercontent.com/kubevirt/hyperconverged-cluster-operator/c6b425961feb0f350655ccfa7401336b30de66ab/hack/strip_old_descriptions.py
  in https://github.com/kubevirt/hyperconverged-cluster-operator/pull/1396

  Retain only the description fields of the stored API version with the exception of descriptions related to podTemplate,
  because those are so verbose and repeated multiple times.

Usage:
  hack/fixup-cert-manager-manifests  < build/cert-manager-1.4.0.upstream.yaml > build/cert-manager-1.4.0.olm.yaml
"""
import sys
import yaml

def remove_helm_crd_annotations(crd):
    """
    Remove helm specific keep annotation from the crd.
    """
    crd["metadata"].get("annotations", {}).pop("helm.sh/resource-policy")

def str_presenter(dumper, data):
  if len(data.splitlines()) > 1:  # check for multiline string
    return dumper.represent_scalar('tag:yaml.org,2002:str', data, style='|')
  return dumper.represent_scalar('tag:yaml.org,2002:str', data)

def main():
    """
    Strip duplicate description fields from all supplied CRD files.
    """

    yaml.representer.SafeRepresenter.add_representer(str, str_presenter)

    for doc in yaml.safe_load_all(sys.stdin):
        if doc is not None:
            if doc.get("kind", "") == "CustomResourceDefinition":
                remove_helm_crd_annotations(doc)
            yaml.safe_dump(doc, sys.stdout)
            sys.stdout.write("---\n")

if __name__ == "__main__":
    main()
